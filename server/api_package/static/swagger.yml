openapi: 3.0.0
info:
  title: Image Similarity Search Backend
  description: Backend to find similar Images based on Facebook's faiss
  version: 0.3

tags: [
  name: Get nearest neighbour(s),
  name: Get thumbnails,
  name: Get fullsize image(s),
  name: Get metadata,
  name: Get other data
]

servers: [
  url: '/'
]

paths:
  # Nearest neighbours
  # 1
  /upload:
    post:
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Route for uploading one or multiple images to find its/their nearest neighbours
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  description: Image to be assessed
                  type: string
                  format: base64
                k:
                  description: k nearest neighbours to be found
                  type: integer
                  example: 10
              required:
                - image
                - k
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploaded_filenames:
                    type: array
                    items: string
                    description: Filenames of uploaded images, to reference other data
                    example: [
                      "img1.png",
                      "img2.png"
                    ]
                  distances:
                    type: array
                    description: Distances between uploaded images and nearest neighbours
                    example: [
                      [1.2, 19.1, 300.2],
                      [0.0, 2.1, 9000]
                    ]
                    items:
                      type: array
                      items: number
                      format: float
                  ids:
                    type: array
                    description: ids of nearest neighbours
                    example: [
                      [1, 2, 3],
                      [90, 19, 10]
                    ]
                    items:
                      type: array
                      items: integer
                  neighbour_filenames:
                    type: array
                    description: filenames of nearest neighbours
                    example: [
                      ["img1.png", "img2.png", "img3.png"],
                      ["img4.png", "img5.png", "img6.png"]
                    ]
                    items:
                      type: array
                      items: string
                  coordinates:
                    type: array
                    descripton: Calculated coordinates of uploaded images
                    example: [
                      [2.199191, 3.929294],
                      [-1.223424, 4.232323]
                    ]
                    items:
                      type: array
                      items: number
                      format: float
                  similarities:
                    type: array
                    description: Distances converted in similarty percentages
                    example: [
                      [0.9999999, 0.5555555, 0.2222222],
                      [0.6666666, 0.2222222, 0.4444444]
                    ]
                  cluster_centers:
                    type: array
                    items: integer
                    description: Corresponding cluster centers
                    example: [5, 1]
                  new_ids:
                    type: array
                    items: integer
                    description: Newly created ids for uploaded images
                    example: [200, 201]
  # 2
  /faiss/getNN/{picture_id}:
    post:
      parameters:
        - in: path
          name: picture_id
          schema:
            type: integer
            example: 0
          required: true
          description: id of the image in the database, whose neighbours shall be found
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Route for getting the nearest neighbours of an image present in the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                k:
                  description: k nearest neighbours to be found
                  type: integer
                  example: 10
              required:
                - k
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  requested_id:
                    type: integer
                    description: id of image in database, whose neighbours were found
                    example: 1
                  requested_filename:
                    type: string
                    description: filename of image in database
                    example: img1.png
                  distances:
                    type: array
                    description: Distances between uploaded images and nearest neighbours
                    example: [
                      [1.2, 19.1, 300.2]
                    ]
                    items:
                      type: array
                      items: number
                      format: float
                  ids:
                    type: array
                    description: ids of nearest neighbours
                    example: [
                      [1, 2, 3]
                    ]
                    items:
                      type: array
                      items: integer
                  neighbour_filenames:
                    type: array
                    description: filenames of nearest neighbours
                    example: [
                      ["img1.png", "img2.png", "img3.png"]
                    ]
                    items:
                      type: array
                      items: string
                  similarities:
                    type: array
                    description: Distances converted in similarty percentages
                    example: [
                      [0.9999999, 0.5555555, 0.2222222]
                    ]
                  cluster_center:
                    type: integer
                    description: Corresponding cluster center
                    example: 1
  # 3
  /faiss/getNN/multiple/{k}:
    post:
      parameters:
        - in: path
          name: k
          schema:
            type: integer
            example: 10
          required: true
          description: k nearest neighbours to be found
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Route for getting the nearest neighbours of multiple images present in the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                picture_ids:
                  type: array
                  items: integer
                  example: [1, 2, 3]
                  description: ids of the images in the database, whose neighbours shall be found
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: id of base image
                    filename:
                      type: string 
                      example: "1.png"
                      description: filename of base image
                    position:
                      type: object
                      properties:
                        x:
                          type: number
                          format: float
                          example: 1.02
                          description: x position of base image
                        y:
                          type: number
                          format: float
                          example: -1.02
                          description: y position of base image
                    cluster_center:
                      type: integer
                      example: 3
                      description: corresponding cluster center of base image
                    neighbour_ids:
                      type: array
                      example: [2, 3, 4]
                      items:
                        type: integer
                      description: ids of k nearest neighbours
                    distances:
                      type: array
                      example: [2999, 3999, 5999]
                      items:
                        type: integer
                      description: distances to k nearest neighbours
                    similarities:
                      type: array
                      example: [0.44, 0.33, 0.11]
                      items:
                        type: number
                        format: float
                      description: similarity in percent to k nearest neighbours
                    neighbour_filenames:
                      type: array
                      example: ["2.png", "3.png", "4.png"]
                      items:
                        type: string
                      description: filenames of nearest neighbours
    get:
      parameters:
        - in: path
          name: k
          schema:
            type: integer
            example: 10
          required: true
          description: k nearest neighbours to be found
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Route for getting the nearest neighbours of all images present in the database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: id of base image
                    filename:
                      type: string 
                      example: "1.png"
                      description: filename of base image
                    position:
                      type: object
                      properties:
                        x:
                          type: number
                          format: float
                          example: 1.02
                          description: x position of base image
                        y:
                          type: number
                          format: float
                          example: -1.02
                          description: y position of base image
                    cluster_center:
                      type: integer
                      example: 3
                      description: corresponding cluster center of base image
                    neighbour_ids:
                      type: array
                      example: [2, 3, 4]
                      items:
                        type: integer
                      description: ids of k nearest neighbours
                    distances:
                      type: array
                      example: [2999, 3999, 5999]
                      items:
                        type: integer
                      description: distances to k nearest neighbours
                    similarities:
                      type: array
                      example: [0.44, 0.33, 0.11]
                      items:
                        type: number
                        format: float
                      description: similarity in percent to k nearest neighbours
                    neighbour_filenames:
                      type: array
                      example: ["2.png", "3.png", "4.png"]
                      items:
                        type: string
                      description: filenames of nearest neighbours
  # 4
  /kmeans/centroids:
    get:
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Get the position and amount of all centroids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  nr_of_centroids:
                    type: integer
                    example: 1
                    description: Current amount of centroids
                  cluster_centers:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                        description: id of cluster center
                      cluster center:
                        type: array
                        items:
                          type: number
                          format: float
                        description: Values for each cluster center
                        example: [-10.32, 2.01]
    post:
      tags: [
        Get nearest neighbour(s)
      ]
      summary: Change the amount of centroids. Default is min(nr_of_data_points, max(1, NUM_CENTROIDS)). NUM_CENTROIDS is specified in .env.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nr_of_centroids:
                  type: integer
                  example: 5
                  description: desired amount of centroids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "k-means now uses 5 centroids"

  # thumbnails
  # 1
  /images/thumbnails/size:
    get:
      tags: [
        Get thumbnails,
        Get other data
      ]
      summary: Get the size (width, height) of the thumbnails within the database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  width:
                    type: integer
                    example: 128
                    description: width of thumbnails
                  height:
                    type: integer
                    example: 128
                    description: height of thumbnails
  # 2
  /images/thumbnails/{picture_id}:
    get:
      parameters:
        - in: path
          name: picture_id
          schema:
            type: integer
            example: 0
          required: true
          description: id of image, whose thumbnail shall be returned
      tags: [
        Get thumbnails
      ]
      summary: Get one thumbnail of image with given picture_id
      responses:
        '200':
          description: OK
          content:
              image/png:
                schema:
                  type: string
                  format: base64
                  example: '{base64 string}'
              image/jpeg:
                schema:
                  type: string
                  format: base64
                  example: '{base64 string}'
  # 3
  /images/thumbnails/multiple:
    post:
      tags: [
        Get thumbnails
      ]
      summary: Get multiple thumbnails, specified by the picture_ids array in the json body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                picture_ids:
                  type: array
                  items: integer
                  example: [1, 2, 3, 4]
                  description: ids of thumbnails to be returned
              reuqired:
                picture_ids
      responses:
        '200':
          description: Filenames are in format {id}_{filename}_thumbnail.{extension}
          content:
            application/x-zip-compressed:
              schema:
                type: object
                example: '{zip directory}'
  # 4
  /images/thumbnails/all:
    get:
      tags: [
        Get thumbnails
      ]
      summary: Get all thumbnails
      responses:
        '200':
          description: Filenames are in format {id}_{filename}_thumbnail.{extension}
          content:
            application/x-zip-compressed:
              schema:
                type: object
                example: '{zip directory}'

  # fullsize
  # 1
  /images/size:
    get:
      tags: [
        Get fullsize image(s),
        Get other data
      ]
      summary: Get the size (width, height) of the fullsize images within the database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  width:
                    type: integer
                    example: 400
                    description: width of fullsize images
                  height:
                    type: integer
                    example: 300
                    description: height of fullsize images
  # 2
  /images/{picture_id}:
    get:
      parameters:
        - in: path
          name: picture_id
          schema:
            type: integer
            example: 0
          required: true
          description: id of image, which shall be returned
      tags: [
        Get fullsize image(s)
      ]
      summary: Get one fullsize image with given picture_id
      responses:
        '200':
          description: OK
          content:
              image/png:
                schema:
                  type: string
                  format: base64
                  example: '{base64 string}'
              image/jpeg:
                schema:
                  type: string
                  format: base64
                  example: '{base64 string}'
  # 3
  /images/{picture_id}/metadata:
    get:
      parameters:
        - in: path
          name: picture_id
          schema:
            type: integer
            example: 0
          required: true
          description: id of image, whose metadata shall be returned
      tags: [
        Get fullsize image(s),
        Get metadata
      ]
      summary: Get metadata of one image specified by picture_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 0
                    description: equal to given picture_id
                  filename:
                    type: string
                    example: image1.png
                    description: filename of the image
                  image_size:
                    type: object
                    properties:
                      width:
                        type: integer
                        example: 400
                      height:
                        type: integer
                        example: 200
                    description: width and height of the image
                  thumbnail_size:
                    type: object
                    properties:
                      width:
                        type: integer
                        example: 128
                      height:
                        type: integer
                        example: 128
                    description: width and height of the thumbnail
                  position:
                    type: array
                    items: number
                    format: float
                    example: [2.0192932, 1.9492030]
                    description: x and y coordinates of the image
                  cluster_center:
                    type: integer
                    description: Corresponding cluster center
                    example: 1
  # 4
  /images/multiple:
    post:
      tags: [
        Get fullsize image(s)
      ]
      summary: Get multiple fullsize images, specified by the picture_ids array in the json body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                picture_ids:
                  type: array
                  items: integer
                  example: [1, 2, 3, 4]
                  description: ids of fullsize images to be returned
              required:
                - picture_ids
      responses:
        '200':
          description: Filenames are in format {id}_{filename}.{extension}
          content:
            application/x-zip-compressed:
              schema:
                type: object
                example: '{zip directory}'
  # 5
  /images/multiple/metadata:
    post:
      tags: [
        Get fullsize image(s),
        Get metadata
      ]
      summary: Get metadata of images specified in picture_ids array in json body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                picture_ids:
                  type: array
                  items: integer
                  example: [1, 2, 3, 4]
                  description: ids of images, whose metadata shall be returned
              required:
                picture_ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 0
                      description: equal to given picture_id
                    filename:
                      type: string
                      example: image1.png
                      description: filename of the image
                    image_size:
                      type: object
                      properties:
                        width:
                          type: integer
                          example: 400
                        height:
                          type: integer
                          example: 200
                      description: width and height of the image
                    thumbnail_size:
                      type: object
                      properties:
                        width:
                          type: integer
                          example: 128
                        height:
                          type: integer
                          example: 128
                      description: width and height of the thumbnail
                    position:
                      type: array
                      items: number
                      format: float
                      example: [2.0192932, 1.9492030]
                      description: x and y coordinates of the image
                    cluster_center:
                      type: integer
                      description: Corresponding cluster center
                      example: 1
  # 6
  /images/all/metadata:
    get:
      tags: [
        Get fullsize image(s),
        Get metadata
      ]
      summary: Get metadata of all images
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 0
                      description: equal to given picture_id
                    filename:
                      type: string
                      example: image1.png
                      description: filename of the image
                    image_size:
                      type: object
                      properties:
                        width:
                          type: integer
                          example: 400
                        height:
                          type: integer
                          example: 200
                      description: width and height of the image
                    thumbnail_size:
                      type: object
                      properties:
                        width:
                          type: integer
                          example: 128
                        height:
                          type: integer
                          example: 128
                      description: width and height of the thumbnail
                    position:
                      type: array
                      items: number
                      format: float
                      example: [2.0192932, 1.9492030]
                      description: x and y coordinates of the image
                    cluster_center:
                      type: integer
                      description: Corresponding cluster center
                      example: 1
  
  # other data
  # 1
  /images/ids:
    get:
      tags: [
        Get other data
      ]
      summary: Get ids of all images in the dataset
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: integer
                example: [0, 1, 2, 3, 4, 5, 6, 7]
                description: array of available ids
  # 2
  /images/analyseDataset:
    get:
      tags: [
        Get other data
      ]
      summary: Get an overview of the coordinates and image properties within the dataset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinates:
                    type: object
                    properties:
                      min_x:
                        type: number
                        format: float
                        example: -2.023945
                        description: Lowest x coordinate
                      max_x:
                        type: number
                        format: float
                        example: 3.920492
                        description: Highest x coordinate
                      min_y:
                        type: number
                        format: float
                        example: -3.294024
                        description: Lowest y coordinate
                      max_y:
                        type: number
                        format: float
                        example: 4.204942
                        description: Highest y coordinate
                      average_x:
                        type: number
                        format: float
                        example: 1.323452e07
                        description: Average x coordinate
                      average_y:
                        type: number
                        format: float
                        example: 1.232323e06
                        description: Average y coordinate
                  images:
                    type: object
                    properties:
                      amount_of_images:
                        type: integer
                        example: 200
                        description: Number of images in database
                      image_size:
                        type: object
                        properties:
                          width:
                            type: integer
                            example: 400
                          height:
                            type: integer
                            example: 200
                        description: width and height of the images
                      thumbnail_size:
                        type: object
                        properties:
                          width:
                            type: integer
                            example: 128
                          height:
                            type: integer
                            example: 128
                        description: width and height of the thumbnails
  # 3
  /faiss/index/all:
    get:
      tags: [
        Get other data
      ]
      summary: Get names of all initialized faiss indices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: string
                example: [
                  IndexFlatL2,
                  IndexIVFFlat
                ]
  # 4
  /faiss/index/{index_key}:
    post:
      parameters:
        - in: path
          name: index_key
          schema:
            type: string
            example: IndexIVFFlat
          required: true
          description: Key of the initialized faiss index to change to
      tags: [
        Get other data
      ]
      summary: Change current faiss index to {index_key}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "success"  
  # 5


